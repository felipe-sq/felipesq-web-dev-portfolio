{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n          \", \";\\n\\n          ::selection {\\n            background-color: #47a3f3;\\n            color: #fefefe;\\n          }\\n\\n          html {\\n            min-width: 360px;\\n            scroll-behavior: smooth;\\n          }\\n\\n          #__next {\\n            display: flex;\\n            flex-direction: column;\\n            min-height: 100vh;\\n            background: \", \";\\n          }\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from \"react\";\nimport { Global, css } from \"@emotion/core\";\nimport { DefaultSeo } from \"next-seo\";\nimport { ThemeProvider, CSSReset, ColorModeProvider, useColorMode } from \"@chakra-ui/core\";\nimport Router from \"next/router\";\nimport * as Fathom from \"fathom-client\";\nimport theme from \"../styles/theme\";\nimport { prismLightTheme, prismDarkTheme } from \"../styles/prism\";\nimport SEO from \"../next-seo.config\";\nimport \"../styles/styles.scss\";\n\nvar GlobalStyle = function GlobalStyle(_ref) {\n  var children = _ref.children;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  return __jsx(React.Fragment, null, __jsx(CSSReset, null), __jsx(Global, {\n    styles: css(_templateObject(), colorMode === \"light\" ? prismLightTheme : prismDarkTheme, colorMode === \"light\" ? \"white\" : \"#171923\")\n  }), children);\n};\n\nRouter.events.on(\"routeChangeComplete\", function () {\n  Fathom.trackPageview();\n});\n\nvar App = function App(_ref2) {\n  var Component = _ref2.Component,\n      pageProps = _ref2.pageProps;\n  useEffect(function () {\n    if (true) {\n      Fathom.load(process.env.NEXT_PUBLIC_FATHOM_SITE_ID, {\n        includedDomains: [\"joshjacobsonmusic.com\"]\n      });\n    }\n  }, []);\n  return __jsx(ThemeProvider, {\n    theme: theme\n  }, __jsx(ColorModeProvider, {\n    value: \"dark\"\n  }, __jsx(GlobalStyle, null, __jsx(DefaultSeo, SEO), __jsx(Component, pageProps))));\n};\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}